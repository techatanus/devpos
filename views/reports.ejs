<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DEVPOS - Reports</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f2f5;
            margin: 0;
            display: flex;
        }
        nav {
            background-color: #4CAF50;
            height: 100vh;
            width: 250px;
            position: fixed;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding-top: 20px;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
        }
        nav ul {
            list-style: none;
            padding: 0;
            width: 100%;
        }
        nav ul li {
            width: 100%;
            margin: 20px 0;
        }
        nav ul li a {
            color: white;
            text-decoration: none;
            font-weight: bold;
            display: block;
            padding: 10px;
            text-align: center;
            transition: background-color 0.3s;
        }
        nav ul li a:hover {
            background-color: #45a049;
        }
        main {
            margin-left: 250px;
            padding: 20px;
            flex: 1;
        }
        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: white;
            padding: 10px 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        header h1 {
            color: #4CAF50;
        }
        header button {
            padding: 10px 20px;
            background-color: #4CAF50;
            border: none;
            color: white;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        header button:hover {
            background-color: #45a049;
        }
        section {
            margin-top: 20px;
        }
        .report-type {
            display: flex;
            justify-content: space-around;
            margin-bottom: 20px;
        }
        .report-type button {
            padding: 10px 20px;
            background-color: #4CAF50;
            border: none;
            color: white;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .report-type button:hover {
            background-color: #45a049;
        }
        .report-content {
            display: none;
        }
        .report-content.active {
            display: block;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        table, th, td {
            border: 1px solid #ddd;
        }
        th, td {
            padding: 10px;
            text-align: left;
        }
        th {
            background-color: #4CAF50;
            color: white;
        }
    </style>
</head>
<body>
    <nav>
        <%- include('./partials/_links')  %>
    </nav>
    <main>
        <header>
            <h1>DEVPOS - Reports</h1>
            <button onclick="logout()">Logout</button>
        </header>
        <section>
         <p>From  <input type="date" name="startD" style="margin: 30px;">  to  <input type="date" name="endD" style="margin: 30px;"></p>
            <div class="report-type">
                <button onclick="showReport('dailySales')">Daily Sales</button>
                <button onclick="showReport('paymentMode')" id="mp">Mode of Payment</button>
               
                <button onclick="showReport('stockRemaining')">Remaining Stock</button>
                <button onclick="showReport('stockSold')">Sold Stock</button>
                <button onclick="showReport('department')">Department</button>
                <button onclick="showReport('otherReports')">Other Reports</button>
                 <button onclick="printReport()">Print Report</button>
    <button onclick="downloadReport()">Download Report</button>
            </div>
            <div id="dailySales" class="report-content">
                <h2>Daily Sales Report</h2>
                <table>
                    <thead>
                        <tr>
                            <th>Sale ID</th>
                            <th>paymentMode</th>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Total</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Daily sales data goes here -->
                    </tbody>
                </table>
            </div>
            <div id="paymentMode" class="report-content">
                <h2>Mode of Payment Report</h2>
                <table>
                    <thead>
                        <tr>
                         <th>Transaction ID</th>
                            <th>Payment Mode</th>
                            <th>Amount</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Mode of payment data goes here -->
                    </tbody>
                </table>
            </div>
            <div id="department" class="report-content">
                <h2>Department Report</h2>
                <table>
                    <thead>
                        <tr>
                            <th>Department</th>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Total</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Department sales data goes here -->
                    </tbody>
                </table>
            </div>
            <div id="stockRemaining" class="report-content">
                <h2>Remaining Stock Report</h2>
                <table>
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Category</th>
                            <th>Quantity Remaining</th>
                            <th>Last Restocked</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Remaining stock data goes here -->
                    </tbody>
                </table>
            </div>
            <div id="stockSold" class="report-content">
                <h2>Sold Stock Report</h2>
                <table>
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Category</th>
                            <th>Quantity Sold</th>
                            <th>Date Sold</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Sold stock data goes here -->
                    </tbody>
                </table>
            </div>
            <div id="otherReports" class="report-content">
                <h2>Other Reports</h2>
                <p>Additional reports can be added here.</p>
            </div>
        </section>
    </main>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>

    <script>
    function showReport(reportId) {
    const reports = document.querySelectorAll('.report-content');
    reports.forEach(report => {
        report.classList.remove('active');
    });
    document.getElementById(reportId).classList.add('active');

    const startDate = document.querySelector('input[name="startD"]').value;
    const endDate = document.querySelector('input[name="endD"]').value;

    fetch(`/report?startDate=${startDate}&endDate=${endDate}&type=${reportId}`)
        .then(response => response.json())
        .then(data => {
            const tbody = document.querySelector(`#${reportId} tbody`);
            tbody.innerHTML = '';

            if (reportId === 'dailySales') {
                data.forEach(row => {
                    tbody.innerHTML += `
                        <tr>
                            <td>${row.sale_id}</td>
                            <td>${row.payment_mode}</td>
                            <td>${row.product}</td>
                            <td>${row.quantity}</td>
                            <td>${row.price}</td>
                            <td>${row.total}</td>
                            <td>${row.date}</td>
                        </tr>`;
                });
            } else if (reportId === 'paymentMode') {
                data.forEach(row => {
                    tbody.innerHTML += `
                        <tr>
                        <td>${row.transaction_id}</td>
                            <td>${row.payment_mode}</td>
                            <td>${row.amount}</td>
                            <td>${row.date}</td>
                        </tr>`;
                });
            } else if (reportId === 'department') {
                data.forEach(row => {
                    tbody.innerHTML += `
                        <tr>
                            <td>${row.department}</td>
                            <td>${row.product}</td>
                            <td>${row.quantity}</td>
                            <td>${row.price}</td>
                            <td>${row.total}</td>
                            <td>${row.date}</td>
                        </tr>`;
                });
            } else if (reportId === 'stockRemaining') {
                data.forEach(row => {
                    tbody.innerHTML += `
                        <tr>
                            <td>${row.product}</td>
                            <td>${row.category}</td>
                            <td>${row.quantity_remaining}</td>
                            <td>${row.last_restocked}</td>
                        </tr>`;
                });
            } else if (reportId === 'stockSold') {
                data.forEach(row => {
                    tbody.innerHTML += `
                        <tr>
                            <td>${row.product}</td>
                            <td>${row.category}</td>
                            <td>${row.quantity_sold}</td>
                            <td>${row.date_sold}</td>
                        </tr>`;
                });
            }
        })
        .catch(error => console.error('Error fetching report data:', error));
}

       // function showReport(reportId) {
         //   const reports = document.querySelectorAll('.report-content');
         //   reports.forEach(report => {
          //      report.classList.remove('active');
          //  });
          //  document.getElementById(reportId).classList.add('active');
      //  }

      //  function logout() {
            // Add your logout functionality here
      //  }
      
      
      document.getElementById('printReceiptBtn').addEventListener('click', function() {
    generateReceipt();
    printReceipt();
});

function generateReceipt() {
    // Populate receipt date
    const date = new Date();
    document.getElementById('receiptDate').innerText = date.toLocaleString();

    // Get cart items and add to receipt
    const cartItems = document.querySelectorAll('#cartContents tr');
    const receiptItems = document.getElementById('receiptItems');
    let totalAmount = 0;
    receiptItems.innerHTML = ''; // Clear previous items

    cartItems.forEach(function(item) {
        const itemName = item.querySelector('td:nth-child(3)').textContent.trim();
        const priceText = item.querySelector('td:nth-child(4)').textContent.trim().replace('ksh', '').trim();
        const quantity = parseInt(item.querySelector('input.quantity').value.trim());
        const totalText = item.querySelector('td:nth-child(6)').textContent.trim().replace('ksh', '').trim();

        const price = parseFloat(priceText) || 0;
        const total = parseFloat(totalText) || 0;

        totalAmount += total;

        const receiptRow = `
            <div style="display: flex; justify-content: space-between;">
                <span>${itemName} x${quantity}</span>
                <span>ksh ${total.toFixed(2)}</span>
            </div>
        `;
        receiptItems.innerHTML += receiptRow;
    });

    const paymentType = document.getElementById('paymentType').value;
    document.getElementById('receiptPaymentType').innerText = paymentType;
    document.getElementById('receiptTotal').innerText = `ksh ${totalAmount.toFixed(2)}`;
}

function printReceipt() {
    const receiptContent = document.getElementById('receipt').innerHTML;

    const printWindow = window.open('', '', 'width=300,height=600');
    printWindow.document.write('<html><head><title>Receipt</title></head><body style="font-family: monospace;">');
    printWindow.document.write(receiptContent);
    printWindow.document.write('</body></html>');
    printWindow.document.close();

    printWindow.onload = function() {
        printWindow.print();
        printWindow.close();

        // Submit the data after printing
        submitData();
    };
}

function submitData() {
    // Encrypt and set cart items in the hidden input field
    const encryptionKey = '3ncryption@key'; // Replace with your encryption key
    let encryptedCartItems = localStorage.getItem('cartItems');
    document.getElementById('encryptedCartItems').value = encryptedCartItems;

    // Clear the cart and submit the form
    clearCartAndSubmit();
}

function clearCartAndSubmit() {
    // Clear the cart
    document.getElementById('cartContents').innerHTML = '';

    // Clear the input fields
    document.getElementById('comment').value = '';
    document.getElementById('paymentType').selectedIndex = 0;
    document.getElementById('paymentValue').value = '';

    // Submit the form
    document.getElementById('salesForm').submit();
}

function printReport() {
    const reportId = document.querySelector('.report-content.active').id;
    const printContent = document.getElementById(reportId).outerHTML;
    const originalContent = document.body.innerHTML;

    document.body.innerHTML = printContent;
    window.print();
    document.body.innerHTML = originalContent;
    location.reload();
}

function downloadReport() {
    const reportId = document.querySelector('.report-content.active').id;
    const table = document.querySelector(`#${reportId} table`);
    const rows = Array.from(table.rows);

    // Create a new jsPDF instance
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF();

    // Add title to the PDF
    doc.text(`${reportId.replace(/([A-Z])/g, ' $1')}`, 14, 16);

    // Add table content
    let startY = 30;
    rows.forEach((row, rowIndex) => {
        const cells = Array.from(row.cells);
        cells.forEach((cell, cellIndex) => {
            const text = cell.textContent || '';
            doc.text(text, 14 + (cellIndex * 40), startY + (rowIndex * 10));
        });
    });

    // Save the PDF with the report ID as the filename
    doc.save(`${reportId}.pdf`);
}


    </script>
</body>
</html>
